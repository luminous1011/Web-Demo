
1.性能优化：重绘和回流是什么？如何减少？
    ① 基本概念
        回流：当render树中的一部分或者全部因为大小边距等距离发生改变而需要重建的过程叫做回流（改变大小）。
        重绘：当元素的一部分属性发生变化，如外观背景色不会引起布局变化而需要重新渲染的过程叫做重绘（改变样式）。
        注意：回流必将引起重绘，而重绘不一定引起回流。

    ② 如何减少回流和重绘 
        1.减少回流和重绘其实就是需要减少对 render tree 的操作（合并多次多 DOM 和样式的修改），并减少对一些样式信息的请求，尽量利用好浏览器的优化策略。
        2.添加 css 样式而不是利用js控制样式（我就是想到这种办法解决回流问题的）
        3.尽量将需要改变 DOM 的操作一次完成
        4.直接改变 className，如果动态改变样式，则使用 cssText（考虑没有优化的浏览器）
        5.不要经常访问会引起浏览器 flush 队列的属性，如果你确实要访问，利用缓存
        6.让元素脱离动画流，减少回流的 Render Tree 的规模
        7.将需要多次重排的元素，position 属性设为 absolute 或 fixed，这样此元素就脱离了文档流，它的变化不会影响到其他元素。例如有动画效果的元素就最好设置为绝对定位；
        8.尽量不要使用表格布局，如果没有定宽表格一列的宽度由最宽的一列决定，那么很可能在最后一行的宽度超出之前的列宽，引起整体回流造成 table 可能需要多次计算才能确定好其在渲染树中节点的属性，通常要花3倍于同等元素的时间。

    https://baijiahao.baidu.com/s?id=1757771749150832752&wfr=spider&for=pc


2.webworker是什么？有什么用？什么场景可以用？
    ① web worker简介
        Web Worker 是HTML5标准的一部分，这一规范定义了一套 API，它允许一段JavaScript程序运行在主线程之外的另外一个线程中。
        值得注意的是， Web Worker 规范中定义了两类工作线程，分别是专用线程Dedicated Worker和共享线程 Shared Worker，其中，Dedicated Worker只能为一个页面所使用，而Shared Worker则可以被多个页面所共享。


3. cors跨域是如何做的？从协议的角度去讲一下？
4. echarts、canvas 这种渲染耗时的工作能不能放在webworker里面做？
5. 怎样做首页加载优化？
6. 数组扁平化、去重、排序

7. 你对区块链技术的了解和看法是什么？
8. vite对比其他打包工具有什么优势和缺点？
9. vite打包大文件性能会不会有影响？


















